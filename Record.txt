02/04/2020 - First online meeting, discussed the nature of the project, potential research questions, relevant literature. (1 hr)

04-08/04/2020 - Read literature 'Towards an ontology in terms of technical debt' and 'Got technical debt?' (3 hr)

09/04/2020 - Read literature 'Using Natural Language Processing
to Automatically Detect Self-Admitted
Technical Debt' (2 hr)

09/04/2020 - Second online meeting: Decided to split the project into three distinct phases: Data collection, Data analysis, and NN training. This week I will begin
write an introduction to the project. I will also begin to write a script to scrape data from google issue tracker.

10/04/2020 - Worked on introduction and referencing (2hr)

13/04/2020 - Found more articles for referencing, worked on introduction. Also began writing data collection project using monorail api. (3 hr)

14/04/2020 - Worked on introduction. Started reading 'Deep learning' for a better understanding of modeling methods to be used. (2 hr)

15/05/2020 - Read more 'Deep learning' Finished mathematical background section. (2 hr)

16/05/2020 - Finished initial introduction draft, meeting at 13:00 with supervisor to discuss data collection methods and introduciton.

18-19/05/2020 - Classified a subset of tickets (25). 

20/05/2020 - Verified classifications and corrected where they differed.

29/05/2020 - Recieved dataset for project.

30/05/2020 - Began classifying dataset.




Thesis structure:
	Introducton
		- Problem
		- Solution
		- structure to thesis
			- collect data
			- analyse data
			- train NN
	Data collection:
		-Method
			- Collection method and program
			-Sterilize method
	Data Analysis:
		-Method
		-Reliability (comparing)
		-Results
	Train NN:
		-Method
		-Justification for method
		- Comparisons with Data analysis
	
	Results
		-Effectiveness
	Concusion

	
	Discussion
    
    Related works (Literature study)




Unsure 

299 - Is this overdeclared dependancies? 
314 - Arch debt (Violation of modularity)
338 - This is almost some kind of debt incured, but they choose not to implement the feature that will make testing more complicated and difficult.
360 - Test debt or not?
405 - Is this complex code (only mentioned in passing).
461 - Unsure if this is defect debt or not debt.


@book{Goodfellow-et-al-2016,
    title={Deep Learning},
    author={Ian Goodfellow and Yoshua Bengio and Aaron Courville},
    publisher={MIT Press},
    note={\url{http://www.deeplearningbook.org}},
    year={2016}
}